// +build go1.9

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was auto-generated by:
// github.com/samjegal/fincloud-sdk-for-go/tools/profileBuilder

package vpc

import original "github.com/samjegal/fincloud-sdk-for-go/services/vpc"

const (
	DefaultBaseURI = original.DefaultBaseURI
)

type NatGatewayInstanceStatusCode = original.NatGatewayInstanceStatusCode

const (
	INIT     NatGatewayInstanceStatusCode = original.INIT
	RUN      NatGatewayInstanceStatusCode = original.RUN
	TERMTING NatGatewayInstanceStatusCode = original.TERMTING
)

type NetworkACLRuleTypeCode = original.NetworkACLRuleTypeCode

const (
	INBND NetworkACLRuleTypeCode = original.INBND
	OTBND NetworkACLRuleTypeCode = original.OTBND
)

type NetworkACLStatusCode = original.NetworkACLStatusCode

const (
	NetworkACLStatusCodeINIT     NetworkACLStatusCode = original.NetworkACLStatusCodeINIT
	NetworkACLStatusCodeRUN      NetworkACLStatusCode = original.NetworkACLStatusCodeRUN
	NetworkACLStatusCodeSET      NetworkACLStatusCode = original.NetworkACLStatusCodeSET
	NetworkACLStatusCodeTERMTING NetworkACLStatusCode = original.NetworkACLStatusCodeTERMTING
)

type PeeringInstanceStatusCode = original.PeeringInstanceStatusCode

const (
	PeeringInstanceStatusCodeINIT     PeeringInstanceStatusCode = original.PeeringInstanceStatusCodeINIT
	PeeringInstanceStatusCodeRUN      PeeringInstanceStatusCode = original.PeeringInstanceStatusCodeRUN
	PeeringInstanceStatusCodeTERMTING PeeringInstanceStatusCode = original.PeeringInstanceStatusCodeTERMTING
)

type ProtocolTypeCode = original.ProtocolTypeCode

const (
	ICMP ProtocolTypeCode = original.ICMP
	TCP  ProtocolTypeCode = original.TCP
	UDP  ProtocolTypeCode = original.UDP
)

type RuleActionCode = original.RuleActionCode

const (
	ALLOW RuleActionCode = original.ALLOW
	DROP  RuleActionCode = original.DROP
)

type SortedBy = original.SortedBy

const (
	SourceVpcName  SortedBy = original.SourceVpcName
	TargetVpcName  SortedBy = original.TargetVpcName
	VpcPeeringName SortedBy = original.VpcPeeringName
)

type SortingOrder = original.SortingOrder

const (
	ASC  SortingOrder = original.ASC
	DESC SortingOrder = original.DESC
)

type StatusCode = original.StatusCode

const (
	StatusCodeCREATING StatusCode = original.StatusCodeCREATING
	StatusCodeINIT     StatusCode = original.StatusCodeINIT
	StatusCodeRUN      StatusCode = original.StatusCodeRUN
	StatusCodeTERMTING StatusCode = original.StatusCodeTERMTING
)

type SubnetStatusCode = original.SubnetStatusCode

const (
	SubnetStatusCodeCREATING SubnetStatusCode = original.SubnetStatusCodeCREATING
	SubnetStatusCodeINIT     SubnetStatusCode = original.SubnetStatusCodeINIT
	SubnetStatusCodeRUN      SubnetStatusCode = original.SubnetStatusCodeRUN
	SubnetStatusCodeTERMTING SubnetStatusCode = original.SubnetStatusCodeTERMTING
)

type SubnetTypeCode = original.SubnetTypeCode

const (
	PRIVATE SubnetTypeCode = original.PRIVATE
	PUBLIC  SubnetTypeCode = original.PUBLIC
)

type SupportedSubnetTypeCode = original.SupportedSubnetTypeCode

const (
	SupportedSubnetTypeCodePRIVATE SupportedSubnetTypeCode = original.SupportedSubnetTypeCodePRIVATE
	SupportedSubnetTypeCodePUBLIC  SupportedSubnetTypeCode = original.SupportedSubnetTypeCodePUBLIC
)

type TargetTypeCode = original.TargetTypeCode

const (
	NATGW      TargetTypeCode = original.NATGW
	VGW        TargetTypeCode = original.VGW
	VPCPEERING TargetTypeCode = original.VPCPEERING
)

type UsageTypeCode = original.UsageTypeCode

const (
	BM    UsageTypeCode = original.BM
	GEN   UsageTypeCode = original.GEN
	LOADB UsageTypeCode = original.LOADB
)

type BaseClient = original.BaseClient
type Client = original.Client
type CreateResponse = original.CreateResponse
type CreateResponseCreateVpcResponse = original.CreateResponseCreateVpcResponse
type DeleteResponse = original.DeleteResponse
type DeleteResponseDeleteVpcResponse = original.DeleteResponseDeleteVpcResponse
type DetailResponse = original.DetailResponse
type DetailResponseGetVpcDetailResponse = original.DetailResponseGetVpcDetailResponse
type List = original.List
type ListResponse = original.ListResponse
type ListResponseGetVpcListResponse = original.ListResponseGetVpcListResponse
type NatGatewayClient = original.NatGatewayClient
type NatGatewayInstanceCreateResponse = original.NatGatewayInstanceCreateResponse
type NatGatewayInstanceCreateResponseCreateNatGatewayInstanceResponse = original.NatGatewayInstanceCreateResponseCreateNatGatewayInstanceResponse
type NatGatewayInstanceDeleteResponse = original.NatGatewayInstanceDeleteResponse
type NatGatewayInstanceDeleteResponseDeleteNatGatewayInstanceResponse = original.NatGatewayInstanceDeleteResponseDeleteNatGatewayInstanceResponse
type NatGatewayInstanceDetailResponse = original.NatGatewayInstanceDetailResponse
type NatGatewayInstanceDetailResponseGetNatGatewayInstanceDetailResponse = original.NatGatewayInstanceDetailResponseGetNatGatewayInstanceDetailResponse
type NatGatewayInstanceList = original.NatGatewayInstanceList
type NatGatewayInstanceListResponse = original.NatGatewayInstanceListResponse
type NatGatewayInstanceListResponseGetNatGatewayInstanceListResponse = original.NatGatewayInstanceListResponseGetNatGatewayInstanceListResponse
type NatGatewayInstanceStatus = original.NatGatewayInstanceStatus
type NetworkACLClient = original.NetworkACLClient
type NetworkACLCreateResponse = original.NetworkACLCreateResponse
type NetworkACLCreateResponseCreateNetworkACLResponse = original.NetworkACLCreateResponseCreateNetworkACLResponse
type NetworkACLDeleteResponse = original.NetworkACLDeleteResponse
type NetworkACLDeleteResponseDeleteNetworkACLResponse = original.NetworkACLDeleteResponseDeleteNetworkACLResponse
type NetworkACLDetailResponse = original.NetworkACLDetailResponse
type NetworkACLDetailResponseGetNetworkACLDetailResponse = original.NetworkACLDetailResponseGetNetworkACLDetailResponse
type NetworkACLInboundRuleAddResponse = original.NetworkACLInboundRuleAddResponse
type NetworkACLInboundRuleAddResponseAddNetworkACLInboundRuleResponse = original.NetworkACLInboundRuleAddResponseAddNetworkACLInboundRuleResponse
type NetworkACLInboundRuleRemoveResponse = original.NetworkACLInboundRuleRemoveResponse
type NetworkACLInboundRuleRemoveResponseRemoveNetworkACLInboundRuleResponse = original.NetworkACLInboundRuleRemoveResponseRemoveNetworkACLInboundRuleResponse
type NetworkACLList = original.NetworkACLList
type NetworkACLListResponse = original.NetworkACLListResponse
type NetworkACLListResponseGetNetworkACLListResponse = original.NetworkACLListResponseGetNetworkACLListResponse
type NetworkACLOutboundRuleAddResponse = original.NetworkACLOutboundRuleAddResponse
type NetworkACLOutboundRuleAddResponseAddNetworkACLOutboundRuleResponse = original.NetworkACLOutboundRuleAddResponseAddNetworkACLOutboundRuleResponse
type NetworkACLOutboundRuleRemoveResponse = original.NetworkACLOutboundRuleRemoveResponse
type NetworkACLOutboundRuleRemoveResponseRemoveNetworkACLOutboundRuleResponse = original.NetworkACLOutboundRuleRemoveResponseRemoveNetworkACLOutboundRuleResponse
type NetworkACLRuleList = original.NetworkACLRuleList
type NetworkACLRuleListResponse = original.NetworkACLRuleListResponse
type NetworkACLRuleListResponseGetNetworkACLRuleListResponse = original.NetworkACLRuleListResponseGetNetworkACLRuleListResponse
type NetworkACLRuleType = original.NetworkACLRuleType
type NetworkACLStatus = original.NetworkACLStatus
type PeeringClient = original.PeeringClient
type PeeringInstanceAcceptOrRejectResponse = original.PeeringInstanceAcceptOrRejectResponse
type PeeringInstanceAcceptOrRejectResponseAcceptOrRejectVpcPeeringResponse = original.PeeringInstanceAcceptOrRejectResponseAcceptOrRejectVpcPeeringResponse
type PeeringInstanceCreateResponse = original.PeeringInstanceCreateResponse
type PeeringInstanceCreateResponseCreateVpcPeeringInstanceResponse = original.PeeringInstanceCreateResponseCreateVpcPeeringInstanceResponse
type PeeringInstanceDeleteResponse = original.PeeringInstanceDeleteResponse
type PeeringInstanceDeleteResponseDeleteVpcPeeringInstanceResponse = original.PeeringInstanceDeleteResponseDeleteVpcPeeringInstanceResponse
type PeeringInstanceDetailResponse = original.PeeringInstanceDetailResponse
type PeeringInstanceDetailResponseGetVpcPeeringInstanceDetailResponse = original.PeeringInstanceDetailResponseGetVpcPeeringInstanceDetailResponse
type PeeringInstanceList = original.PeeringInstanceList
type PeeringInstanceListResponse = original.PeeringInstanceListResponse
type PeeringInstanceListResponseGetVpcPeeringInstanceListResponse = original.PeeringInstanceListResponseGetVpcPeeringInstanceListResponse
type PeeringInstanceStatus = original.PeeringInstanceStatus
type PeeringResponse = original.PeeringResponse
type ProtocolType = original.ProtocolType
type RouteAddResponse = original.RouteAddResponse
type RouteAddResponseAddRouteResponse = original.RouteAddResponseAddRouteResponse
type RouteClient = original.RouteClient
type RouteList = original.RouteList
type RouteListResponse = original.RouteListResponse
type RouteListResponseGetRouteListResponse = original.RouteListResponseGetRouteListResponse
type RouteRemoveResponse = original.RouteRemoveResponse
type RouteRemoveResponseRemoveRouteResponse = original.RouteRemoveResponseRemoveRouteResponse
type RouteTableClient = original.RouteTableClient
type RouteTableCreateResponse = original.RouteTableCreateResponse
type RouteTableCreateResponseCreateRouteTableResponse = original.RouteTableCreateResponseCreateRouteTableResponse
type RouteTableDeleteResponse = original.RouteTableDeleteResponse
type RouteTableDeleteResponseDeleteRouteTableResponse = original.RouteTableDeleteResponseDeleteRouteTableResponse
type RouteTableDetailResponse = original.RouteTableDetailResponse
type RouteTableDetailResponseGetRouteTableDetailResponse = original.RouteTableDetailResponseGetRouteTableDetailResponse
type RouteTableList = original.RouteTableList
type RouteTableListResponse = original.RouteTableListResponse
type RouteTableListResponseGetRouteTableListResponse = original.RouteTableListResponseGetRouteTableListResponse
type RouteTableStatus = original.RouteTableStatus
type RouteTableSubnetAddResponse = original.RouteTableSubnetAddResponse
type RouteTableSubnetAddResponseAddRouteTableSubnetResponse = original.RouteTableSubnetAddResponseAddRouteTableSubnetResponse
type RouteTableSubnetClient = original.RouteTableSubnetClient
type RouteTableSubnetListResponse = original.RouteTableSubnetListResponse
type RouteTableSubnetListResponseGetRouteTableSubnetListResponse = original.RouteTableSubnetListResponseGetRouteTableSubnetListResponse
type RouteTableSubnetRemoveResponse = original.RouteTableSubnetRemoveResponse
type RouteTableSubnetRemoveResponseRemoveRouteTableSubnetResponse = original.RouteTableSubnetRemoveResponseRemoveRouteTableSubnetResponse
type RuleAction = original.RuleAction
type Status = original.Status
type SubnetClient = original.SubnetClient
type SubnetCreateResponse = original.SubnetCreateResponse
type SubnetCreateResponseCreateSubnetResponse = original.SubnetCreateResponseCreateSubnetResponse
type SubnetDeleteResponse = original.SubnetDeleteResponse
type SubnetDeleteResponseDeleteSubnetResponse = original.SubnetDeleteResponseDeleteSubnetResponse
type SubnetDetailResponse = original.SubnetDetailResponse
type SubnetDetailResponseGetSubnetDetailResponse = original.SubnetDetailResponseGetSubnetDetailResponse
type SubnetList = original.SubnetList
type SubnetListResponse = original.SubnetListResponse
type SubnetListResponseGetSubnetListResponse = original.SubnetListResponseGetSubnetListResponse
type SubnetNetworkACLResponse = original.SubnetNetworkACLResponse
type SubnetNetworkACLResponseSetSubnetNetworkACLResponse = original.SubnetNetworkACLResponseSetSubnetNetworkACLResponse
type SubnetStatus = original.SubnetStatus
type SubnetType = original.SubnetType
type SupportedSubnetType = original.SupportedSubnetType
type TargetType = original.TargetType
type UsageType = original.UsageType

func New() BaseClient {
	return original.New()
}
func NewClient() Client {
	return original.NewClient()
}
func NewClientWithBaseURI(baseURI string) Client {
	return original.NewClientWithBaseURI(baseURI)
}
func NewClientWithBaseURIWithKey(baseURI string, accessKey string, secretKey string) Client {
	return original.NewClientWithBaseURIWithKey(baseURI, accessKey, secretKey)
}
func NewClientWithKey(accessKey string, secretKey string) Client {
	return original.NewClientWithKey(accessKey, secretKey)
}
func NewNatGatewayClient() NatGatewayClient {
	return original.NewNatGatewayClient()
}
func NewNatGatewayClientWithBaseURI(baseURI string) NatGatewayClient {
	return original.NewNatGatewayClientWithBaseURI(baseURI)
}
func NewNatGatewayClientWithBaseURIWithKey(baseURI string, accessKey string, secretKey string) NatGatewayClient {
	return original.NewNatGatewayClientWithBaseURIWithKey(baseURI, accessKey, secretKey)
}
func NewNatGatewayClientWithKey(accessKey string, secretKey string) NatGatewayClient {
	return original.NewNatGatewayClientWithKey(accessKey, secretKey)
}
func NewNetworkACLClient() NetworkACLClient {
	return original.NewNetworkACLClient()
}
func NewNetworkACLClientWithBaseURI(baseURI string) NetworkACLClient {
	return original.NewNetworkACLClientWithBaseURI(baseURI)
}
func NewNetworkACLClientWithBaseURIWithKey(baseURI string, accessKey string, secretKey string) NetworkACLClient {
	return original.NewNetworkACLClientWithBaseURIWithKey(baseURI, accessKey, secretKey)
}
func NewNetworkACLClientWithKey(accessKey string, secretKey string) NetworkACLClient {
	return original.NewNetworkACLClientWithKey(accessKey, secretKey)
}
func NewPeeringClient() PeeringClient {
	return original.NewPeeringClient()
}
func NewPeeringClientWithBaseURI(baseURI string) PeeringClient {
	return original.NewPeeringClientWithBaseURI(baseURI)
}
func NewPeeringClientWithBaseURIWithKey(baseURI string, accessKey string, secretKey string) PeeringClient {
	return original.NewPeeringClientWithBaseURIWithKey(baseURI, accessKey, secretKey)
}
func NewPeeringClientWithKey(accessKey string, secretKey string) PeeringClient {
	return original.NewPeeringClientWithKey(accessKey, secretKey)
}
func NewRouteClient() RouteClient {
	return original.NewRouteClient()
}
func NewRouteClientWithBaseURI(baseURI string) RouteClient {
	return original.NewRouteClientWithBaseURI(baseURI)
}
func NewRouteClientWithBaseURIWithKey(baseURI string, accessKey string, secretKey string) RouteClient {
	return original.NewRouteClientWithBaseURIWithKey(baseURI, accessKey, secretKey)
}
func NewRouteClientWithKey(accessKey string, secretKey string) RouteClient {
	return original.NewRouteClientWithKey(accessKey, secretKey)
}
func NewRouteTableClient() RouteTableClient {
	return original.NewRouteTableClient()
}
func NewRouteTableClientWithBaseURI(baseURI string) RouteTableClient {
	return original.NewRouteTableClientWithBaseURI(baseURI)
}
func NewRouteTableClientWithBaseURIWithKey(baseURI string, accessKey string, secretKey string) RouteTableClient {
	return original.NewRouteTableClientWithBaseURIWithKey(baseURI, accessKey, secretKey)
}
func NewRouteTableClientWithKey(accessKey string, secretKey string) RouteTableClient {
	return original.NewRouteTableClientWithKey(accessKey, secretKey)
}
func NewRouteTableSubnetClient() RouteTableSubnetClient {
	return original.NewRouteTableSubnetClient()
}
func NewRouteTableSubnetClientWithBaseURI(baseURI string) RouteTableSubnetClient {
	return original.NewRouteTableSubnetClientWithBaseURI(baseURI)
}
func NewRouteTableSubnetClientWithBaseURIWithKey(baseURI string, accessKey string, secretKey string) RouteTableSubnetClient {
	return original.NewRouteTableSubnetClientWithBaseURIWithKey(baseURI, accessKey, secretKey)
}
func NewRouteTableSubnetClientWithKey(accessKey string, secretKey string) RouteTableSubnetClient {
	return original.NewRouteTableSubnetClientWithKey(accessKey, secretKey)
}
func NewSubnetClient() SubnetClient {
	return original.NewSubnetClient()
}
func NewSubnetClientWithBaseURI(baseURI string) SubnetClient {
	return original.NewSubnetClientWithBaseURI(baseURI)
}
func NewSubnetClientWithBaseURIWithKey(baseURI string, accessKey string, secretKey string) SubnetClient {
	return original.NewSubnetClientWithBaseURIWithKey(baseURI, accessKey, secretKey)
}
func NewSubnetClientWithKey(accessKey string, secretKey string) SubnetClient {
	return original.NewSubnetClientWithKey(accessKey, secretKey)
}
func NewWithBaseURI(baseURI string) BaseClient {
	return original.NewWithBaseURI(baseURI)
}
func NewWithBaseURIWithKey(baseURI string, accessKey string, secretKey string) BaseClient {
	return original.NewWithBaseURIWithKey(baseURI, accessKey, secretKey)
}
func NewWithKey(accessKey string, secretKey string) BaseClient {
	return original.NewWithKey(accessKey, secretKey)
}
func PossibleNatGatewayInstanceStatusCodeValues() []NatGatewayInstanceStatusCode {
	return original.PossibleNatGatewayInstanceStatusCodeValues()
}
func PossibleNetworkACLRuleTypeCodeValues() []NetworkACLRuleTypeCode {
	return original.PossibleNetworkACLRuleTypeCodeValues()
}
func PossibleNetworkACLStatusCodeValues() []NetworkACLStatusCode {
	return original.PossibleNetworkACLStatusCodeValues()
}
func PossiblePeeringInstanceStatusCodeValues() []PeeringInstanceStatusCode {
	return original.PossiblePeeringInstanceStatusCodeValues()
}
func PossibleProtocolTypeCodeValues() []ProtocolTypeCode {
	return original.PossibleProtocolTypeCodeValues()
}
func PossibleRuleActionCodeValues() []RuleActionCode {
	return original.PossibleRuleActionCodeValues()
}
func PossibleSortedByValues() []SortedBy {
	return original.PossibleSortedByValues()
}
func PossibleSortingOrderValues() []SortingOrder {
	return original.PossibleSortingOrderValues()
}
func PossibleStatusCodeValues() []StatusCode {
	return original.PossibleStatusCodeValues()
}
func PossibleSubnetStatusCodeValues() []SubnetStatusCode {
	return original.PossibleSubnetStatusCodeValues()
}
func PossibleSubnetTypeCodeValues() []SubnetTypeCode {
	return original.PossibleSubnetTypeCodeValues()
}
func PossibleSupportedSubnetTypeCodeValues() []SupportedSubnetTypeCode {
	return original.PossibleSupportedSubnetTypeCodeValues()
}
func PossibleTargetTypeCodeValues() []TargetTypeCode {
	return original.PossibleTargetTypeCodeValues()
}
func PossibleUsageTypeCodeValues() []UsageTypeCode {
	return original.PossibleUsageTypeCodeValues()
}
func UserAgent() string {
	return original.UserAgent() + " profiles/latest"
}
func Version() string {
	return original.Version()
}
