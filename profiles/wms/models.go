// +build go1.9

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was auto-generated by:
// github.com/samjegal/fincloud-sdk-for-go/tools/profileBuilder

package wms

import original "github.com/samjegal/fincloud-sdk-for-go/services/wms"

const (
	DefaultBaseURI = original.DefaultBaseURI
)

type AlarmStatus = original.AlarmStatus

const (
	OFF AlarmStatus = original.OFF
	ON  AlarmStatus = original.ON
)

type ErrorType = original.ErrorType

const (
	JAVASCRIPT ErrorType = original.JAVASCRIPT
	URL        ErrorType = original.URL
)

type FilterType = original.FilterType

const (
	FilterTypeJs        FilterType = original.FilterTypeJs
	FilterTypeJsprefix  FilterType = original.FilterTypeJsprefix
	FilterTypeURL       FilterType = original.FilterTypeURL
	FilterTypeUrlprefix FilterType = original.FilterTypeUrlprefix
)

type LocationName = original.LocationName

const (
	HK LocationName = original.HK
	JP LocationName = original.JP
	KR LocationName = original.KR
	SG LocationName = original.SG
	US LocationName = original.US
)

type MonitoringType = original.MonitoringType

const (
	MonitoringTypeSCENARIO MonitoringType = original.MonitoringTypeSCENARIO
	MonitoringTypeURL      MonitoringType = original.MonitoringTypeURL
)

type ResultEnum = original.ResultEnum

const (
	FAIL    ResultEnum = original.FAIL
	SUCCESS ResultEnum = original.SUCCESS
)

type ServiceType = original.ServiceType

const (
	MOBILE ServiceType = original.MOBILE
	PC     ServiceType = original.PC
)

type StatusType = original.StatusType

const (
	StatusTypeOFF StatusType = original.StatusTypeOFF
	StatusTypeON  StatusType = original.StatusTypeON
)

type StepEvent = original.StepEvent

const (
	Click      StepEvent = original.Click
	FindObject StepEvent = original.FindObject
	FindText   StepEvent = original.FindText
	Text       StepEvent = original.Text
)

type StepResult = original.StepResult

const (
	StepResultFAIL    StepResult = original.StepResultFAIL
	StepResultSUCCESS StepResult = original.StepResultSUCCESS
)

type BaseClient = original.BaseClient
type Client = original.Client
type DetailParameter = original.DetailParameter
type FilterParameter = original.FilterParameter
type ListParameter = original.ListParameter
type LocationInfoParameter = original.LocationInfoParameter
type ResultContentDataParameter = original.ResultContentDataParameter
type ResultContentLogParameter = original.ResultContentLogParameter
type ResultContentlParameter = original.ResultContentlParameter
type ReturnParameter = original.ReturnParameter
type SetObject = original.SetObject

func New() BaseClient {
	return original.New()
}
func NewClient() Client {
	return original.NewClient()
}
func NewClientWithBaseURI(baseURI string) Client {
	return original.NewClientWithBaseURI(baseURI)
}
func NewWithBaseURI(baseURI string) BaseClient {
	return original.NewWithBaseURI(baseURI)
}
func PossibleAlarmStatusValues() []AlarmStatus {
	return original.PossibleAlarmStatusValues()
}
func PossibleErrorTypeValues() []ErrorType {
	return original.PossibleErrorTypeValues()
}
func PossibleFilterTypeValues() []FilterType {
	return original.PossibleFilterTypeValues()
}
func PossibleLocationNameValues() []LocationName {
	return original.PossibleLocationNameValues()
}
func PossibleMonitoringTypeValues() []MonitoringType {
	return original.PossibleMonitoringTypeValues()
}
func PossibleResultEnumValues() []ResultEnum {
	return original.PossibleResultEnumValues()
}
func PossibleServiceTypeValues() []ServiceType {
	return original.PossibleServiceTypeValues()
}
func PossibleStatusTypeValues() []StatusType {
	return original.PossibleStatusTypeValues()
}
func PossibleStepEventValues() []StepEvent {
	return original.PossibleStepEventValues()
}
func PossibleStepResultValues() []StepResult {
	return original.PossibleStepResultValues()
}
func UserAgent() string {
	return original.UserAgent() + " profiles/latest"
}
func Version() string {
	return original.Version()
}
