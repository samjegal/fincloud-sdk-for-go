// +build go1.9

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This code was auto-generated by:
// github.com/samjegal/fincloud-sdk-for-go/tools/profileBuilder

package loadbalancer

import original "github.com/samjegal/fincloud-sdk-for-go/services/loadbalancer"

const (
	DefaultBaseURI = original.DefaultBaseURI
)

type AlgorithmTypeCode = original.AlgorithmTypeCode

const (
	MH AlgorithmTypeCode = original.MH
	RR AlgorithmTypeCode = original.RR
)

type HealthCheckStatusCode = original.HealthCheckStatusCode

const (
	AVAIL HealthCheckStatusCode = original.AVAIL
)

type IPTypeCode = original.IPTypeCode

const (
	PRIVATE IPTypeCode = original.PRIVATE
	PUBLIC  IPTypeCode = original.PUBLIC
)

type LayerTypeCode = original.LayerTypeCode

const (
	APPLICATION  LayerTypeCode = original.APPLICATION
	NETWORK      LayerTypeCode = original.NETWORK
	NETWORKPROXY LayerTypeCode = original.NETWORKPROXY
)

type OperationCode = original.OperationCode

const (
	CHANG OperationCode = original.CHANG
	CREAT OperationCode = original.CREAT
	NULL  OperationCode = original.NULL
	TERMT OperationCode = original.TERMT
)

type ProtocolCode = original.ProtocolCode

const (
	ICMP ProtocolCode = original.ICMP
	TCP  ProtocolCode = original.TCP
	UDP  ProtocolCode = original.UDP
)

type ServerInstanceStatusCode = original.ServerInstanceStatusCode

const (
	ServerInstanceStatusCodeCREAT ServerInstanceStatusCode = original.ServerInstanceStatusCodeCREAT
	ServerInstanceStatusCodeINIT  ServerInstanceStatusCode = original.ServerInstanceStatusCodeINIT
	ServerInstanceStatusCodeRUN   ServerInstanceStatusCode = original.ServerInstanceStatusCodeRUN
	ServerInstanceStatusCodeSTOP  ServerInstanceStatusCode = original.ServerInstanceStatusCodeSTOP
)

type ServerProtocolCode = original.ServerProtocolCode

const (
	HTTP  ServerProtocolCode = original.HTTP
	HTTPS ServerProtocolCode = original.HTTPS
)

type StatusCode = original.StatusCode

const (
	INIT StatusCode = original.INIT
	USED StatusCode = original.USED
)

type Throughput = original.Throughput

const (
	LARGE  Throughput = original.LARGE
	MEDIUM Throughput = original.MEDIUM
	SMALL  Throughput = original.SMALL
)

type BaseClient = original.BaseClient
type CheckNameParameter = original.CheckNameParameter
type Client = original.Client
type InstanceListParameter = original.InstanceListParameter
type InstanceParameter = original.InstanceParameter
type ListenerClient = original.ListenerClient
type ListenerParameter = original.ListenerParameter
type RuleListParameter = original.RuleListParameter
type SearchContentParameter = original.SearchContentParameter
type SearchListParameter = original.SearchListParameter
type SearchParameter = original.SearchParameter
type ServerClient = original.ServerClient
type ServerInstanceListParameter = original.ServerInstanceListParameter
type ServerInstanceParameter = original.ServerInstanceParameter
type ServerInstanceRuleList = original.ServerInstanceRuleList
type ServerParameter = original.ServerParameter
type SettingParameter = original.SettingParameter
type StatusName = original.StatusName
type TargetServerInstanceListParameter = original.TargetServerInstanceListParameter
type TargetServerInstanceParameter = original.TargetServerInstanceParameter
type ZoneContentParameter = original.ZoneContentParameter
type ZoneListParameter = original.ZoneListParameter
type ZoneSubnetParameter = original.ZoneSubnetParameter

func New() BaseClient {
	return original.New()
}
func NewClient() Client {
	return original.NewClient()
}
func NewClientWithBaseURI(baseURI string) Client {
	return original.NewClientWithBaseURI(baseURI)
}
func NewListenerClient() ListenerClient {
	return original.NewListenerClient()
}
func NewListenerClientWithBaseURI(baseURI string) ListenerClient {
	return original.NewListenerClientWithBaseURI(baseURI)
}
func NewServerClient() ServerClient {
	return original.NewServerClient()
}
func NewServerClientWithBaseURI(baseURI string) ServerClient {
	return original.NewServerClientWithBaseURI(baseURI)
}
func NewWithBaseURI(baseURI string) BaseClient {
	return original.NewWithBaseURI(baseURI)
}
func PossibleAlgorithmTypeCodeValues() []AlgorithmTypeCode {
	return original.PossibleAlgorithmTypeCodeValues()
}
func PossibleHealthCheckStatusCodeValues() []HealthCheckStatusCode {
	return original.PossibleHealthCheckStatusCodeValues()
}
func PossibleIPTypeCodeValues() []IPTypeCode {
	return original.PossibleIPTypeCodeValues()
}
func PossibleLayerTypeCodeValues() []LayerTypeCode {
	return original.PossibleLayerTypeCodeValues()
}
func PossibleOperationCodeValues() []OperationCode {
	return original.PossibleOperationCodeValues()
}
func PossibleProtocolCodeValues() []ProtocolCode {
	return original.PossibleProtocolCodeValues()
}
func PossibleServerInstanceStatusCodeValues() []ServerInstanceStatusCode {
	return original.PossibleServerInstanceStatusCodeValues()
}
func PossibleServerProtocolCodeValues() []ServerProtocolCode {
	return original.PossibleServerProtocolCodeValues()
}
func PossibleStatusCodeValues() []StatusCode {
	return original.PossibleStatusCodeValues()
}
func PossibleStatusNameValues() []StatusName {
	return original.PossibleStatusNameValues()
}
func PossibleThroughputValues() []Throughput {
	return original.PossibleThroughputValues()
}
func UserAgent() string {
	return original.UserAgent() + " profiles/latest"
}
func Version() string {
	return original.Version()
}
